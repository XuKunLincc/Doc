1，什么是进程休眠？
	进程经常需要等待一些IO或者外部中断的发生，当我们需要等待的时候，我们就可以让我们的进程休眠，或者说阻塞。
	当我们需要休眠的时候，内核操作都是一样的：进程把自己标记成休眠状态，从可执行红黑树中移除，放入等待队列中，
	然后调用schedule()选择和执行一个其他程序。
2，那么进程什么时候会被唤醒呢？
	a) 等待队列：
		休眠的程序都将会被加入等待队列中，当等待的相关事件发生的时候，队列上的进程就会被唤醒。
	当我们所阻塞的事件发生了，那么我们的进程就会被唤醒，而唤醒进程的就是，产生该事件的代码，事件处理中最后会调用wake_up()
	函数来唤醒我们的进程。
	
3，进程开始调度：
	内核中使用一个need_resched标志来表明是否需要重新执行一次调度。
	每个进程都包含一个need_resched标志，这主要是因为访问进程描述符内的数值比访问一个全局变量还要快。
	内核从中断处理程序或者系统调用返回时都会调用need_resched标志。
	当我们的调度程序决定要切换进程了会做以下的工作：
		a)调用context_switch()函数
			1) 调用switch_mm()函数来负责切换页表之类的操作，将虚拟内存从上一个进程映射到新进程。
			2) 调用switch_to()该函数负责切换寄存器，栈信息等。

4，实时调度策略：
	Linux内核实时调度策略有两种：SCHED_FIFO 和 SCHED_RR。
	Linux内核提供的实时调度策略是软实时的，不能够保证百分百的。

*疑问：关于时间片，内核是不是每隔固定的一个时间就产生中断，然后将时间片减去相应的值，而进程因为时间片的用完也是
在这个中断中进行调度？
			